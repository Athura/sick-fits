{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.060958b262983b05e710.hot-update.js","sources":["webpack:///./components/Cart.js","webpack:///./components/CartItem.js","webpack:///./components/Header.js","webpack:///./components/Nav.js","webpack:///./components/User.js","webpack:///./components/styles/CartStyles.js","webpack:///./components/styles/CloseButton.js","webpack:///./components/styles/SickButton.js","webpack:///./components/styles/Supreme.js","webpack:///./lib/calcTotalPrice.js","webpack:///./lib/formatMoney.js","webpack:///./lib/withData.js"],"sourcesContent":["import React from 'react';\r\nimport { Query, Mutation } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport User from './User';\r\nimport CartStyles from './styles/CartStyles';\r\nimport Supreme from './styles/Supreme';\r\nimport CloseButton from './styles/CloseButton';\r\nimport SickButton from './styles/SickButton';\r\nimport CartItem from './CartItem';\r\nimport calcTotalPrice from '../lib/calcTotalPrice';\r\nimport formatMoney from '../lib/formatMoney';\r\n\r\nconst LOCAL_STATE_QUERY = gql`\r\n  query {\r\n    cartOpen @client\r\n  }\r\n`;\r\n\r\nconst TOGGLE_CART_MUTATION = gql`\r\n  mutation {\r\n    toggleCart @client\r\n  }\r\n`;\r\n\r\nconst Cart = () => (\r\n  <User>\r\n    {({ data: { me } }) => {\r\n      if (!me) return null;\r\n      console.log(me);\r\n      return (\r\n        <Mutation mutation={TOGGLE_CART_MUTATION}>\r\n          {toggleCart => (\r\n            <Query query={LOCAL_STATE_QUERY}>\r\n              {({ data }) => (\r\n                <CartStyles open={data.cartOpen}>\r\n                  <header>\r\n                    <CloseButton onClick={toggleCart} title=\"close\">\r\n                      &times;\r\n                    </CloseButton>\r\n                    <Supreme>{me.name}'s Cart</Supreme>\r\n                    <p>\r\n                      You Have {me.cart.length} Item{me.cart.length === 1 ? '' : 's'} in your cart.\r\n                    </p>\r\n                  </header>\r\n                  <ul>\r\n                    {me.cart.map(cartItem => <CartItem key={cartItem.id} cartItem={cartItem} />)}\r\n                  </ul>\r\n                  <footer>\r\n                    <p>{formatMoney(calcTotalPrice(me.cart))}</p>\r\n                    <SickButton>Checkout</SickButton>\r\n                  </footer>\r\n                </CartStyles>\r\n              )}\r\n            </Query>\r\n          )}\r\n        </Mutation>\r\n      );\r\n    }}\r\n  </User>\r\n);\r\n\r\nexport default Cart;\r\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport PropTypes from 'prop-types';\r\nimport formatMoney from '../lib/formatMoney';\r\n\r\nconst CartItemStyles = styled.li`\r\n  padding: 1rem 0;\r\n  border-bottom: 1px solid ${props => props.theme.lightgrey};\r\n  display: grid;\r\n  align-items: center;\r\n  grid-template-columns: auto 1fr auto;\r\n  img {\r\n    margin-right: 10px;\r\n  }\r\n  h3,\r\n  p {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst CartItem = ({ cartItem }) => (\r\n  <CartItemStyles>\r\n    <img width=\"100\" src={cartItem.item.image} alt={cartItem.item.title} />\r\n    <div className=\"cart-item-details\">\r\n      <h3>{cartItem.item.title}</h3>\r\n      <p>\r\n        {formatMoney(cartItem.item.price * cartItem.quantity)}\r\n        {' - '}\r\n        <em>\r\n          {cartItem.quantity} &times; {formatMoney(cartItem.item.price)} each\r\n        </em>\r\n      </p>\r\n    </div>\r\n  </CartItemStyles>\r\n);\r\n\r\nCartItem.propTypes = {\r\n  cartItem: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default CartItem;","import Nav from './Nav';\r\nimport Link from 'next/link';\r\nimport styled from 'styled-components';\r\nimport Router from 'next/router';\r\nimport NProgress from 'nprogress';\r\n\r\nimport Cart from './Cart';\r\n\r\nRouter.onRouteChangeStart = () => {\r\n    NProgress.start();\r\n}\r\n\r\nRouter.onRouteChangeComplete = () => {\r\n    NProgress.done();\r\n}\r\n\r\nRouter.onRouteChangeError = () => {\r\n    NProgress.done();\r\n}\r\n\r\nconst Logo = styled.h1`\r\n  font-size: 4rem;\r\n  margin-left: 2rem;\r\n  position: relative;\r\n  z-index: 2;\r\n  transform: skew(-7deg);\r\n  a {\r\n    padding: 0.5rem 1rem;\r\n    background: ${props => props.theme.red};\r\n    color: white;\r\n    text-transform: uppercase;\r\n    text-decoration: none;\r\n  }\r\n  @media (max-width: 1300px) {\r\n    margin: 0;\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst StyledHeader = styled.header`\r\n  .bar {\r\n    border-bottom: 10px solid ${props => props.theme.black};\r\n    display: grid;\r\n    grid-template-columns: auto 1fr;\r\n    justify-content: space-between;\r\n    align-items: stretch;\r\n    @media (max-width: 1300px) {\r\n      grid-template-columns: 1fr;\r\n      justify-content: center;\r\n    }\r\n  }\r\n  .sub-bar {\r\n    display: grid;\r\n    grid-template-columns: 1fr auto;\r\n    border-bottom: 1px solid ${props => props.theme.lightgrey};\r\n  }\r\n`;\r\n\r\nconst Header = () => (\r\n  <StyledHeader>\r\n    <div className=\"bar\">\r\n      <Logo>\r\n        <Link href=\"/\">\r\n          <a>Sick Fits</a>\r\n        </Link>\r\n      </Logo>\r\n      <Nav />\r\n    </div>\r\n    <div className=\"sub-bar\">\r\n      <p>Search</p>\r\n    </div>\r\n    <Cart />\r\n  </StyledHeader>\r\n);\r\n\r\nexport default Header;","import Link from 'next/link';\r\nimport { Mutation } from 'react-apollo';\r\nimport { TOGGLE_CART_MUTATION } from './Cart';\r\nimport NavStyles from './styles/NavStyles';\r\nimport User from './User';\r\nimport Signout from './Signout';\r\n\r\nconst Nav = () => (\r\n  <User>\r\n    {({ data: { me } }) => (\r\n      <NavStyles>\r\n        <Link href=\"/items\">\r\n          <a>Shop</a>\r\n        </Link>\r\n        {me && (\r\n          <>\r\n            <Link href=\"/sell\">\r\n              <a>Sell</a>\r\n            </Link>\r\n            <Link href=\"/orders\">\r\n              <a>Orders</a>\r\n            </Link>\r\n            <Link href=\"/me\">\r\n              <a>Account</a>\r\n            </Link>\r\n            <Signout />\r\n            <Mutation mutation={TOGGLE_CART_MUTATION}>\r\n              {(toggleCart) => (\r\n                <button onClick={toggleCart}>My Cart</button>\r\n              )}\r\n            </Mutation>\r\n          </>\r\n        )}\r\n        {!me && (\r\n          <Link href=\"/signup\">\r\n            <a>Sign In</a>\r\n          </Link>\r\n\r\n        )}\r\n      </NavStyles>\r\n    )}\r\n  </User>\r\n);\r\n\r\nexport default Nav;","import { Query } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst CURRENT_USER_QUERY = gql`\r\n  query {\r\n    me {\r\n      id\r\n      email\r\n      name\r\n      permissions\r\n      cart {\r\n        id\r\n        quantity\r\n        item {\r\n          id\r\n          price\r\n          image\r\n          title\r\n          description\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst User = props => (\r\n  <Query {...props} query={CURRENT_USER_QUERY}>\r\n    {payload => props.children(payload)}\r\n  </Query>\r\n);\r\n\r\nUser.propTypes = {\r\n  children: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default User;\r\nexport { CURRENT_USER_QUERY };\r\n","import styled from 'styled-components';\r\n\r\nconst CartStyles = styled.div`\r\n  padding: 20px;\r\n  position: relative;\r\n  background: white;\r\n  position: fixed;\r\n  height: 100%;\r\n  top: 0;\r\n  right: 0;\r\n  width: 40%;\r\n  min-width: 500px;\r\n  bottom: 0;\r\n  transform: translateX(100%);\r\n  transition: all 0.3s;\r\n  box-shadow: 0 0 10px 3px rgba(0, 0, 0, 0.2);\r\n  z-index: 5;\r\n  display: grid;\r\n  grid-template-rows: auto 1fr auto;\r\n  ${props => props.open && `transform: translateX(0);`};\r\n  header {\r\n    border-bottom: 5px solid ${props => props.theme.black};\r\n    margin-bottom: 2rem;\r\n    padding-bottom: 2rem;\r\n  }\r\n  footer {\r\n    border-top: 10px double ${props => props.theme.black};\r\n    margin-top: 2rem;\r\n    padding-top: 2rem;\r\n    display: grid;\r\n    grid-template-columns: auto auto;\r\n    align-items: center;\r\n    font-size: 3rem;\r\n    font-weight: 900;\r\n    p {\r\n      margin: 0;\r\n    }\r\n  }\r\n  ul {\r\n    margin: 0;\r\n    padding: 0;\r\n    list-style: none;\r\n    overflow: scroll;\r\n  }\r\n`;\r\n\r\nexport default CartStyles;\r\n","import styled from 'styled-components';\r\n\r\nconst CloseButton = styled.button`\r\n  background: black;\r\n  color: white;\r\n  font-size: 3rem;\r\n  border: 0;\r\n  position: absolute;\r\n  z-index: 2;\r\n  right: 0;\r\n`;\r\n\r\nexport default CloseButton;\r\n","import styled from 'styled-components';\r\n\r\nconst SickButton = styled.button`\r\n  background: red;\r\n  color: white;\r\n  font-weight: 500;\r\n  border: 0;\r\n  border-radius: 0;\r\n  text-transform: uppercase;\r\n  font-size: 2rem;\r\n  padding: 0.8rem 1.5rem;\r\n  transform: skew(-2deg);\r\n  display: inline-block;\r\n  transition: all 0.5s;\r\n  &[disabled] {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\n\r\nexport default SickButton;\r\n","import styled from 'styled-components';\r\n\r\nconst Supreme = styled.h3`\r\n  background: ${props => props.theme.red};\r\n  color: white;\r\n  display: inline-block;\r\n  padding: 4px 5px;\r\n  transform: skew(-3deg);\r\n  margin: 0;\r\n  font-size: 4rem;\r\n`;\r\n\r\nexport default Supreme;\r\n","export default function calcTotalPrice(cart) {\r\n  return cart.reduce((tally, cartItem) => {\r\n    if (!cartItem.item) return tally;\r\n    return tally + cartItem.quantity * cartItem.item.price;\r\n  }, 0);\r\n}\r\n","export default function(amount) {\r\n  const options = {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n    minimumFractionDigits: 2,\r\n  };\r\n  // if its a whole, dollar amount, leave off the .00\r\n  if (amount % 100 === 0) options.minimumFractionDigits = 0;\r\n  const formatter = new Intl.NumberFormat('en-US', options);\r\n  return formatter.format(amount / 100);\r\n}\r\n","import withApollo from 'next-with-apollo';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { endpoint } from '../config';\r\nimport { LOCAL_STATE_QUERY, } from '../components/Cart';\r\n\r\nfunction createClient({ headers }) {\r\n  return new ApolloClient({\r\n    uri: process.env.NODE_ENV === 'development' ? endpoint : endpoint,\r\n    request: operation => {\r\n      operation.setContext({\r\n        fetchOptions: {\r\n          credentials: 'include',\r\n        },\r\n        headers,\r\n      });\r\n    },\r\n    // Local data\r\n    clientState: {\r\n      resolvers: {\r\n        Mutation: {\r\n          toggleCart(_, variables, { cache }) {\r\n            // read the cartOpen value from cache\r\n            const { cartOpen } = cache.readQuery({\r\n              query: LOCAL_STATE_QUERY,\r\n            });\r\n            // Write the cart state the opposite\r\n            const data = {\r\n              data: { cartOpen: !cartOpen },\r\n            };\r\n            cache.writeData(data);\r\n            return data;\r\n          },\r\n        }\r\n      },\r\n      defaults: {\r\n        cartOpen: false,\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport default withApollo(createClient);\r\n"],"mappings":"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","sourceRoot":""}