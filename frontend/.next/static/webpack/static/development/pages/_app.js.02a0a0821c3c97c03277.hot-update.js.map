{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.02a0a0821c3c97c03277.hot-update.js","sources":["webpack:///./components/Cart.js","webpack:///./lib/withData.js"],"sourcesContent":["import React from 'react';\r\nimport { Query, Mutation } from 'react-apollo';\r\nimport gql from 'graphql-tag';\r\nimport CartStyles from './styles/CartStyles';\r\nimport Supreme from './styles/Supreme';\r\nimport CloseButton from './styles/CloseButton';\r\nimport SickButton from './styles/SickButton';\r\n\r\n// @client is a graphql directive that lets apollo know to not go to Graphql backend. Instead it will look at our default state, or specified state from apollo store\r\nconst LOCAL_STATE_QUERY = gql`\r\n    query {\r\n        cartOpen @client\r\n    }\r\n`;\r\n\r\nconst TOGGLE_CART_MUTATION = gql`\r\n    mutation {\r\n        toggleCart @client\r\n    }\r\n`;\r\n\r\nconst Cart = () => {\r\n    <Mutation mutation={TOGGLE_CART_MUTATION}>\r\n    {toggleCart => (\r\n    <Query query={LOCAL_STATE_QUERY}>\r\n    {({data}) => (\r\n    <CartStyles open={data.cartOpen}>\r\n        <header>\r\n            <CloseButton onClick={toggleCart} title=\"close\">&times;</CloseButton>\r\n            <Supreme>Your Cart</Supreme>\r\n            <p>You have __ items in your cart.</p>\r\n        </header>\r\n        <footer>\r\n            <p>$10.10</p>\r\n            <SickButton>Checkout</SickButton>\r\n        </footer>\r\n    </CartStyles>\r\n    )}\r\n    </Query>\r\n    )}</Mutation>\r\n}\r\n\r\nexport default Cart;\r\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };","import withApollo from 'next-with-apollo';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { endpoint } from '../config';\r\nimport { LOCAL_STATE_QUERY, } from '../components/Cart';\r\n\r\nfunction createClient({ headers }) {\r\n  return new ApolloClient({\r\n    uri: process.env.NODE_ENV === 'development' ? endpoint : endpoint,\r\n    request: operation => {\r\n      operation.setContext({\r\n        fetchOptions: {\r\n          credentials: 'include',\r\n        },\r\n        headers,\r\n      });\r\n    },\r\n    // Local data\r\n    clientState: {\r\n      resolvers: {\r\n        Mutation: {\r\n          toggleCart(_, variables, { cache }) {\r\n            // read the cartOpen value from cache\r\n          },\r\n        }\r\n      },\r\n      defaults: {\r\n        cartOpen: false,\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport default withApollo(createClient);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAMA;AACA;AAKA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAFA;AAiBA;AACA;AACA;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAEA;AAHA;AADA;AAOA;AACA;AADA;AARA;AAXA;AAwBA;AACA;AACA;;;;A","sourceRoot":""}