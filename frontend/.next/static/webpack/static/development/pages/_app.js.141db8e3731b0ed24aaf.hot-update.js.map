{"version":3,"file":"static/webpack/static\\development\\pages\\_app.js.141db8e3731b0ed24aaf.hot-update.js","sources":["webpack:///./lib/withData.js"],"sourcesContent":["import withApollo from 'next-with-apollo';\r\nimport ApolloClient from 'apollo-boost';\r\nimport { endpoint } from '../config';\r\nimport { LOCAL_STATE_QUERY, } from '../components/Cart';\r\n\r\nfunction createClient({ headers }) {\r\n  return new ApolloClient({\r\n    uri: process.env.NODE_ENV === 'development' ? endpoint : endpoint,\r\n    request: operation => {\r\n      operation.setContext({\r\n        fetchOptions: {\r\n          credentials: 'include',\r\n        },\r\n        headers,\r\n      });\r\n    },\r\n    // Local data\r\n    clientState: {\r\n      resolvers: {\r\n        Mutation: {\r\n          toggleCart(_, variables, { cache }) {\r\n            // read the cartOpen value from cache\r\n            const { cartOpen } = cache.readQuery({\r\n              query: LOCAL_STATE_QUERY,\r\n            });\r\n            // Write the cart state the opposite\r\n            const data = {\r\n              data: { cartOpen: !cartOpen },\r\n            };\r\n            cache.writeData(data)\r\n          },\r\n        }\r\n      },\r\n      defaults: {\r\n        cartOpen: false,\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nexport default withApollo(createClient);\r\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;AAGA;AADA;AAFA;AACA;AACA;AAIA;AACA;AAAA;AAAA;AADA;AAGA;AACA;AAXA;AADA;AAeA;AACA;AADA;AAhBA;AAXA;AAgCA;AACA;AACA;;;;A","sourceRoot":""}